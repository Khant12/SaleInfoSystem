package ThreeDataStructure;

package LinearDataStructure;

public class QueueAdt implements Queue {
	
	int queue[];
	int front;
	int rear;
	int maxSize;
	int nitems;
	

	public QueueAdt(int maxSize) {
		super();
		this.maxSize = maxSize;
		front = -1;
		rear = -1;
		nitems = 0;
		queue = new int [maxSize];
	}
	
	

	@Override
	public void enqueue(int item) {
		// TODO Auto-generated method stub
		if (front == -1) {
			front = 0;
		}
		
		if (rear == maxSize-1) {
			rear = -1;
		}
		
		queue[++rear] = item;
		nitems ++;
		
	}

	@Override
	public int dequeue() {
		// TODO Auto-generated method stub
		
		nitems--;
		if (front == maxSize) {
			front = 0;
		}
		int data = queue[front];
		front ++;
		return data;
		
		
//		return queue[front++];
		
		
	}

	@Override
	public int first() {
		// TODO Auto-generated method stub
		return queue[front];
	}

	@Override
	public boolean isFull() {
		// TODO Auto-generated method stub
		return nitems == maxSize;
		
		
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return nitems == 0;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return nitems;
	}

}
